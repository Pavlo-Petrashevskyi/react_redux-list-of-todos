{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","query","status","initFilters","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","useState","filteredTodos","setFilteredTodos","useEffect","title","toLocaleLowerCase","includes","completed","filterTodos","length","className","map","sameTodo","id","classNames","onClick","currentTodoActions","handleCurrentTodoChange","TodoFilter","handleQuerySet","filtersActions","onSubmit","event","preventDefault","value","onChange","e","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","user","setUser","isLoading","setIsLoading","userId","finally","href","email","name","App","todosActions","Root","ReactDOM","render","document","getElementById"],"mappings":"oOAgBaA,EALG,SAACC,GAAD,MAAgC,CAC9CC,KAAM,kBACNC,QAASF,IAGED,EANM,iBAAyB,CAAEE,KAAM,uBAwBrCE,EAhBY,WAGd,IAFXC,EAEU,uDAFK,KACfC,EACU,uCACV,OAAQA,EAAOJ,MACb,IAAK,kBACH,OAAOI,EAAOH,QAEhB,IAAK,qBACH,OAAO,KAET,QACE,OAAOE,I,OCVAL,EAVI,SAACO,GAAD,MAAoC,CACnDL,KAAM,oBACNC,QAASI,IAQEP,EALK,SAACQ,GAAD,MAAsC,CACtDN,KAAM,qBACNC,QAASK,IAKLC,EAAc,CAClBF,MAAO,GACPC,OAAQ,OAsBKE,EAnBO,WAA0C,IAAzCL,EAAwC,uDAAhCI,EAAaH,EAAmB,uCAC7D,OAAQA,EAAOJ,MACb,IAAK,oBACH,OAAO,2BACFG,GADL,IAEEE,MAAOD,EAAOH,UAGlB,IAAK,qBACH,OAAO,2BACFE,GADL,IAEEG,OAAQF,EAAOH,UAGnB,QACE,OAAOE,I,OC3BAL,EALI,SAACW,GAAD,MAAoC,CACnDT,KAAM,YACNC,QAASQ,IAeIC,EAVM,WAAgD,IAA/CP,EAA8C,uDAA/B,GAAIC,EAA2B,uCAClE,MACO,cADCA,EAAOJ,KAEJ,YAAII,EAAOH,SAGXE,GCfPQ,EAAcC,0BAAgB,CAClCC,YAAaX,EACbY,OAAQN,EACRC,MAAOC,IAGIK,EAAQC,sBACnBL,EACAM,8BACEC,0BAAgBC,O,6CCdPC,EAAoCC,IACpCC,EAAkDC,I,OCGlDC,EAAqB,WAChC,IAAMC,EAAWL,IACjB,EAA0CM,qBAA1C,mBAAOC,EAAP,KAAsBC,EAAtB,KACMd,EAASQ,GAAe,SAAAnB,GAAK,OAAIA,EAAMW,UACvCL,EAAQa,GAAe,SAAAnB,GAAK,OAAIA,EAAMM,SACtCI,EAAcS,GAAe,SAAAnB,GAAK,OAAIA,EAAMU,eAoBlDgB,qBAAU,WACRD,EAnBkB,WAClB,OAAQd,EAAOR,QACb,IAAK,SACH,OAAO,YAAIG,EAAMK,QAAO,SAAAf,GAAI,OAAIA,EAAK+B,MAAMC,oBACxCC,SAASlB,EAAOT,MAAM0B,uBACjBhC,EAAKkC,cAEf,IAAK,YACH,OAAO,YAAIxB,EAAMK,QAAO,SAAAf,GAAI,OAAIA,EAAK+B,MAAMC,oBACxCC,SAASlB,EAAOT,MAAM0B,sBAClBhC,EAAKkC,cAEd,QACE,OAAO,YAAIxB,EAAMK,QAAO,SAAAf,GAAI,OAAIA,EAAK+B,MAAMC,oBACxCC,SAASlB,EAAOT,MAAM0B,0BAKZG,MAChB,CAACpB,IAMJ,OACE,qCACGa,GAA0C,IAAzBA,EAAcQ,QAE5B,mBAAGC,UAAU,0BAAb,iEAKHT,GAAiBA,EAAcQ,OAAS,GACvC,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCAEA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAIjB,uCACA,wCAIJ,gCACGT,EAAcU,KAAI,SAAAtC,GACjB,IAAMuC,GAAsB,OAAXzB,QAAW,IAAXA,OAAA,EAAAA,EAAa0B,MAAOxC,EAAKwC,GAE1C,OACE,qBACE,UAAQ,OAERH,UAAWI,IAAW,CACpB,4BAA6BF,IAJjC,UAOE,oBAAIF,UAAU,eAAd,SAA8BrC,EAAKwC,KACnC,oBAAIH,UAAU,eAAd,SACGrC,EAAKkC,WACJ,sBAAMG,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAKnB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAYrC,EAAKkC,UAAgC,mBAApB,kBAAhC,SAAyElC,EAAK+B,UAGhF,oBAAIM,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVpC,KAAK,SACLyC,QAAS,kBA5DG,SAAC1C,GAC/B0B,EAASiB,EAA2B3C,IA2DH4C,CAAwB5C,IAJzC,SAME,sBAAMqC,UAAU,OAAhB,SACE,mBACEA,UAAWI,IAAW,MAAOF,EAAW,eAAiB,oBA3B5DvC,EAAKwC,gBCrEfK,EAAuB,WAClC,IAAMnB,EAAWL,IACXN,EAASQ,GAAe,SAAAnB,GAAK,OAAIA,EAAMW,UAEvC+B,EAAiB,WAAiB,IAAhBxC,EAAe,uDAAP,GAC9BoB,EAASqB,EAAwBzC,KAOnC,OACE,uBACE+B,UAAU,mBACVW,SAAU,SAAAC,GAAK,OAAIA,EAAMC,kBAF3B,UAIE,mBAAGb,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRc,MAAOpC,EAAOR,OACd6C,SAdc,SAACC,GACvB3B,EAASqB,EAAyBM,EAAEC,OAAOH,SAUrC,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGd,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRpC,KAAK,OACLoC,UAAU,QACVkB,YAAY,YACZJ,MAAOpC,EAAOT,MACd8C,SAAU,SAAAC,GAAC,OAAIP,EAAeO,EAAEC,OAAOH,UAEzC,sBAAMd,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdtB,EAAOT,MAAM8B,OAAS,GACrB,sBAAMC,UAAU,gBAAgBmB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRxD,KAAK,SACLoC,UAAU,SACVK,QAAS,kBAAMI,gBCpDhBY,G,MAAmB,kBAC9B,qBAAKrB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCOnB,SAASsB,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICdMC,EAAsB,WACjC,IAAM5C,EAAWL,IACjB,EAAwBM,qBAAxB,mBAAO4C,EAAP,KAAaC,EAAb,KACA,EAAkC7C,oBAAkB,GAApD,mBAAO8C,EAAP,KAAkBC,EAAlB,KACM5D,EAAcS,GAAe,SAAAnB,GAAK,OAAIA,EAAMU,eAElDgB,qBAAU,WDUW,IAAC6C,ECThB7D,IACF4D,GAAa,IDQKC,ECNV7D,EAAY6D,ODMiBhB,EAAG,iBAAiBgB,KCLtDT,KAAKM,GACLI,SAAQ,kBAAMF,GAAa,SAE/B,CAAC5D,IAMJ,OACE,mCACGA,GACC,sBAAKuB,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBACdoC,EACI,cAAC,EAAD,IACDF,GACA,sBAAKlC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYvB,EAAY0B,MAIxB,wBACEvC,KAAK,SACLoC,UAAU,SACV,UAAQ,cACRK,QAAS,WAzBzBhB,EAASiB,WA6BG,sBAAKN,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGvB,EAAYiB,QAGf,oBAAGM,UAAU,QAAQ,UAAQ,aAA7B,UACGvB,EAAYoB,UAET,wBAAQG,UAAU,mBAAlB,kBAGA,wBAAQA,UAAU,kBAAlB,qBAEH,OACD,mBAAGwC,KAAI,iBAAYN,EAAKO,OAAxB,SAAkCP,EAAKQ,sBCvD9CC,EAAgB,WAC3B,IAAMtD,EAAWL,IACXP,EAAcS,GAAe,SAAAnB,GAAK,OAAIA,EAAMU,eAClD,EAAkCa,oBAAkB,GAApD,mBAAO8C,EAAP,KAAkBC,EAAlB,KAYA,OAVA5C,qBAAU,WACR4C,GAAa,GFGaf,EAAY,UEAnCO,MAAK,SAAAE,GACJ1C,EAASuD,EAAsBb,OAEhCQ,SAAQ,kBAAMF,GAAa,QAC7B,IAGD,qCACE,qBAAKrC,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACGoC,EACG,cAAC,EAAD,IAEA,qCACE,oBAAIpC,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,gBAQZoC,GAAa3D,GAAe,cAAC,EAAD,QC1C9BoE,EAAO,kBACX,cAAC,IAAD,CAAUlE,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,SAKNmE,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.a913030a.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","type AddQueryAction = {\n  type: 'filters/ADD_QUERY',\n  payload: string,\n};\ntype AddStatusAction = {\n  type: 'filters/ADD_STATUS',\n  payload: string,\n};\ntype Action = AddStatusAction | AddQueryAction;\n\nconst addQuery = (query: string): AddQueryAction => ({\n  type: 'filters/ADD_QUERY',\n  payload: query,\n});\n\nconst addStatus = (status: string): AddStatusAction => ({\n  type: 'filters/ADD_STATUS',\n  payload: status,\n});\n\nexport const actions = { addQuery, addStatus };\n\nconst initFilters = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (state = initFilters, action: Action) => {\n  switch (action.type) {\n    case 'filters/ADD_QUERY':\n      return {\n        ...state,\n        query: action.payload,\n      };\n\n    case 'filters/ADD_STATUS':\n      return {\n        ...state,\n        status: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype AddTodosAction = {\n  type: 'todos/ADD',\n  payload: Todo[]\n};\n\ntype Action = AddTodosAction;\ntype State = Todo[] | [];\n\nconst addTodos = (todos: Todo[]): AddTodosAction => ({\n  type: 'todos/ADD',\n  payload: todos,\n});\n\nexport const actions = { addTodos };\n\nconst todosReducer = (state: State = [], action: Action): Todo[] => {\n  switch (action.type) {\n    case 'todos/ADD':\n      return [...action.payload];\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>();\n  const filter = useAppSelector(state => state.filter);\n  const todos = useAppSelector(state => state.todos);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const filterTodos = () => {\n    switch (filter.status) {\n      case 'active':\n        return [...todos.filter(todo => todo.title.toLocaleLowerCase()\n          .includes(filter.query.toLocaleLowerCase())\n            && !todo.completed)];\n\n      case 'completed':\n        return [...todos.filter(todo => todo.title.toLocaleLowerCase()\n          .includes(filter.query.toLocaleLowerCase())\n            && todo.completed)];\n\n      default:\n        return [...todos.filter(todo => todo.title.toLocaleLowerCase()\n          .includes(filter.query.toLocaleLowerCase()))];\n    }\n  };\n\n  useEffect(() => {\n    setFilteredTodos(filterTodos());\n  }, [filter]);\n\n  const handleCurrentTodoChange = (todo: Todo) => {\n    dispatch(currentTodoActions.setTodo(todo));\n  };\n\n  return (\n    <>\n      {filteredTodos && filteredTodos.length === 0\n        && (\n          <p className=\"notification is-warning\">\n            There are no todos matching current filter criteria\n          </p>\n        )}\n\n      {filteredTodos && filteredTodos.length > 0 && (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {filteredTodos.map(todo => {\n              const sameTodo = currentTodo?.id === todo.id;\n\n              return (\n                <tr\n                  data-cy=\"todo\"\n                  key={todo.id}\n                  className={classNames({\n                    'has-background-info-light': sameTodo,\n                  })}\n                >\n                  <td className=\"is-vcentered\">{todo.id}</td>\n                  <td className=\"is-vcentered\">\n                    {todo.completed && (\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    )}\n                  </td>\n\n                  <td className=\"is-vcentered is-expanded\">\n                    <p className={!todo.completed ? 'has-text-danger' : 'has-text-success'}>{todo.title}</p>\n                  </td>\n\n                  <td className=\"has-text-right is-vcentered\">\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => handleCurrentTodoChange(todo)}\n                    >\n                      <span className=\"icon\">\n                        <i\n                          className={classNames('far', sameTodo ? 'fa-eye-slash' : 'fa-eye')}\n                        />\n                      </span>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n\n            {/* <tr data-cy=\"todo\">\n              <td className=\"is-vcentered\">1</td>\n              <td className=\"is-vcentered\"> </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className=\"has-text-danger\">delectus aut autem</p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n\n            <tr data-cy=\"todo\">\n              <td className=\"is-vcentered\">2</td>\n              <td className=\"is-vcentered\"> </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n\n            <tr data-cy=\"todo\" className=\"has-background-info-light\">\n              <td className=\"is-vcentered\">3</td>\n              <td className=\"is-vcentered\"> </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className=\"has-text-danger\">fugiat veniam minus</p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n\n            <tr data-cy=\"todo\">\n              <td className=\"is-vcentered\">4</td>\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className=\"has-text-success\">et porro tempora</p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n\n            <tr data-cy=\"todo\">\n              <td className=\"is-vcentered\">5</td>\n              <td className=\"is-vcentered\"> </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className=\"has-text-danger\">laboriosam mollitia et enim quasi adipisci quia provident illum</p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n\n            <tr data-cy=\"todo\">\n              <td className=\"is-vcentered\">6</td>\n              <td className=\"is-vcentered\"> </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className=\"has-text-danger\">qui ullam ratione quibusdam voluptatem quia omnis</p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n\n            <tr data-cy=\"todo\">\n              <td className=\"is-vcentered\">7</td>\n              <td className=\"is-vcentered\"> </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className=\"has-text-danger\">illo expedita consequatur quia in</p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n\n            <tr data-cy=\"todo\">\n              <td className=\"is-vcentered\">8</td>\n\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n\n            <tr data-cy=\"todo\">\n              <td className=\"is-vcentered\">9</td>\n              <td className=\"is-vcentered\"> </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className=\"has-text-danger\">molestiae perspiciatis ipsa</p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n\n            <tr data-cy=\"todo\">\n              <td className=\"is-vcentered\">10</td>\n\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className=\"has-text-success\">illo est ratione doloremque quia maiores aut</p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr> */}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filtersActions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const filter = useAppSelector(state => state.filter);\n\n  const handleQuerySet = (query = '') => {\n    dispatch(filtersActions.addQuery(query));\n  };\n\n  const handleStatusSet = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(filtersActions.addStatus(e.target.value));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter.status}\n            onChange={handleStatusSet}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filter.query}\n          onChange={e => handleQuerySet(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {filter.query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => handleQuerySet()}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const [user, setUser] = useState<User>();\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    if (currentTodo) {\n      setIsLoading(true);\n\n      getUser(currentTodo.userId)\n        .then(setUser)\n        .finally(() => setIsLoading(false));\n    }\n  }, [currentTodo]);\n\n  const removeCurrentTodo = () => {\n    dispatch(currentTodoActions.removeTodo());\n  };\n\n  return (\n    <>\n      {currentTodo && (\n        <div className=\"modal is-active\" data-cy=\"modal\">\n          <div className=\"modal-background\" />\n          {isLoading\n            ? (<Loader />)\n            : user && (\n              <div className=\"modal-card\">\n                <header className=\"modal-card-head\">\n                  <div\n                    className=\"modal-card-title has-text-weight-medium\"\n                    data-cy=\"modal-header\"\n                  >\n                    {`Todo #${currentTodo.id}`}\n                  </div>\n\n                  {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                  <button\n                    type=\"button\"\n                    className=\"delete\"\n                    data-cy=\"modal-close\"\n                    onClick={() => removeCurrentTodo()}\n                  />\n                </header>\n\n                <div className=\"modal-card-body\">\n                  <p className=\"block\" data-cy=\"modal-title\">\n                    {currentTodo.title}\n                  </p>\n\n                  <p className=\"block\" data-cy=\"modal-user\">\n                    {currentTodo.completed\n                      ? (\n                        <strong className=\"has-text-success\">Done</strong>\n                      )\n                      : (\n                        <strong className=\"has-text-danger\">Planned</strong>\n                      )}\n                    {' by '}\n                    <a href={`mailto:${user.email}`}>{user.name}</a>\n                  </p>\n                </div>\n              </div>\n            )}\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(res => {\n        dispatch(todosActions.addTodos(res));\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            {isLoading\n              ? <Loader />\n              : (\n                <>\n                  <h1 className=\"title\">Todos:</h1>\n\n                  <div className=\"block\">\n                    <TodoFilter />\n                  </div>\n\n                  <div className=\"block\">\n                    <TodoList />\n                  </div>\n                </>\n              )}\n          </div>\n        </div>\n      </div>\n\n      {!isLoading && currentTodo && <TodoModal /> }\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}